/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     rhoSimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         1000;

deltaT          1;

writeControl    timeStep;

writeInterval   50;

purgeWrite      0;

writeFormat     ascii;

writePrecision   8;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
{

 
 //#include "fieldAverageDict"
 
 forces
 {
 type forces;
 functionObjectLibs ("libforces.so");
 rhoName rho;
 UName  U;
 pName  p;
 rhoInf 1;
 patches (Airfoil);
 CofR (0.25 0.005 0); // mean between y-coord at x=0.25
 outputControl timeStep;
 outputInterval 1;
 }
 
 forceCoeffs
 {
 // rhoInf - reference density
 // CofR - Centre of rotation
 // dragDir - Direction of drag coefficient
 // liftDir - Direction of lift coefficient
 // pitchAxis - Pitching moment axis
 // magUinf - free stream velocity magnitude
 // lRef - reference length
 // Aref - reference area
 type forceCoeffs;
 functionObjectLibs ("libforces.so");
 patches (Airfoil);
 rhoName rho;
 UName  U;
 pName  p;
 rhoInf 1;
 CofR (0.25 0.005 0); // mean between y-coord at x=0.25
 liftDir (-0.087155743 0.996194698 0);
 dragDir (0.996194698  0.087155743 0);
 pitchAxis (0 0 1);
 magUInf 0.436155196;
 lRef 1.0; // cylinder max diameter
 Aref 1.0; //projected area from cylinder
 outputControl timeStep;
 outputInterval 1;
 }

 sample
 {
 type   sets;
 libs   (sampling);
 writeControl   outputTime;
 writeInterval  1;
 interpolationScheme    cellPoint;
 setFormat      raw;
 sets
 (
        cp
        {
        type    cloud;
        axis    x;
        points  (#include coord.dat);
        interpolate     true;
        }
 );
 fields (p);
 }

}

// ************************************************************************* //
